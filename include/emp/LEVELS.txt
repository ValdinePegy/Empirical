============ LEVEL 0 ============
Action.hpp  (control/Action.hpp)
BloomFilter.hpp  (datastructs/BloomFilter.hpp)
Cache.hpp  (datastructs/Cache.hpp)
MemoryIStream.hpp  (io/MemoryIStream.hpp)
NullStream.hpp  (io/NullStream.hpp)
OrgInterface.hpp  (Evolve/OrgInterface.hpp)
PlusCountdownRegulator.hpp  (matching/regulators/PlusCountdownRegulator.hpp)
_DepositoryEntry.hpp  (matching/_DepositoryEntry.hpp)
_TableCell.hpp  (web/_TableCell.hpp)
_TableCol.hpp  (web/_TableCol.hpp)
_TableColGroup.hpp  (web/_TableColGroup.hpp)
_TableRow.hpp  (web/_TableRow.hpp)
_TableRowGroup.hpp  (web/_TableRowGroup.hpp)
_bitset_helpers.hpp  (bits/_bitset_helpers.hpp)
_is_streamable.hpp  (base/_is_streamable.hpp)
_tdebug_assert_trigger.hpp  (base/_tdebug_assert_trigger.hpp)
bitset_utils.hpp  (bits/bitset_utils.hpp)
ce_string.hpp  (in_progress/constexpr/ce_string.hpp)
class.hpp  (in_progress/class.hpp)
constants.hpp  (math/constants.hpp)
debug.hpp  (debug/debug.hpp)
error.hpp  (base/error.hpp)
errors.hpp  (base/errors.hpp)
fixed.hpp  (in_progress/fixed.hpp)
macro_math.hpp  (base/macro_math.hpp)
meta.hpp  (meta/meta.hpp)
span.hpp  (polyfill/span.hpp)
struct.hpp  (in_progress/struct.hpp)
value_utils.hpp  (tools/value_utils.hpp)
============ LEVEL 1 ============
ConfigLexer.hpp  (in_progress/ConfigLexer.hpp)
 : errors.hpp(0)
TypePack.hpp  (meta/TypePack.hpp)
 : meta.hpp(0)
ValPack.hpp  (meta/ValPack.hpp)
 : meta.hpp(0)
_emscripten_assert_trigger.hpp  (base/_emscripten_assert_trigger.hpp)
 : _is_streamable.hpp(0)
_native_assert_trigger.hpp  (base/_native_assert_trigger.hpp)
 : _is_streamable.hpp(0)
macros.hpp  (base/macros.hpp)
 : macro_math.hpp(0)
============ LEVEL 2 ============
ConceptWrapper.hpp  (meta/ConceptWrapper.hpp)
 : TypePack.hpp(1) macros.hpp(1) meta.hpp(0)
_assert_trigger.hpp  (base/_assert_trigger.hpp)
 : _emscripten_assert_trigger.hpp(1) _native_assert_trigger.hpp(1) _tdebug_assert_trigger.hpp(0)
reflection.hpp  (meta/reflection.hpp)
 : TypePack.hpp(1) meta.hpp(0)
serialize_macros.hpp  (io/serialize_macros.hpp)
 : macros.hpp(1)
tuple_struct.hpp  (datastructs/tuple_struct.hpp)
 : macros.hpp(1) meta.hpp(0)
============ LEVEL 3 ============
always_assert.hpp  (base/always_assert.hpp)
 : _assert_trigger.hpp(2) macros.hpp(1)
always_assert_warning.hpp  (base/always_assert_warning.hpp)
 : _assert_trigger.hpp(2) macros.hpp(1)
============ LEVEL 4 ============
assert.hpp  (base/assert.hpp)
 : always_assert.hpp(3)
assert_warning.hpp  (base/assert_warning.hpp)
 : always_assert_warning.hpp(3)
============ LEVEL 5 ============
Bool.hpp  (datastructs/Bool.hpp)
 : assert.hpp(4)
GenericFunction.hpp  (functional/GenericFunction.hpp)
 : assert.hpp(4)
MapProxy.hpp  (base/MapProxy.hpp)
 : assert.hpp(4)
QueueCache.hpp  (datastructs/QueueCache.hpp)
 : assert.hpp(4)
Trait.hpp  (in_progress/Trait.hpp)
 : assert.hpp(4) meta.hpp(0)
array.hpp  (base/array.hpp)
 : assert.hpp(4)
ce_array.hpp  (in_progress/constexpr/ce_array.hpp)
 : assert.hpp(4)
emscripten_assert.hpp  (base/emscripten_assert.hpp)
 : assert.hpp(4)
flex_function.hpp  (functional/flex_function.hpp)
 : assert.hpp(4) meta.hpp(0)
optional.hpp  (base/optional.hpp)
 : assert.hpp(4)
timing.hpp  (tools/timing.hpp)
 : assert.hpp(4) constants.hpp(0)
unique.hpp  (tools/unique.hpp)
 : assert.hpp(4) constants.hpp(0)
vector.hpp  (base/vector.hpp)
 : assert.hpp(4)
============ LEVEL 6 ============
BatchConfig.hpp  (in_progress/BatchConfig.hpp)
 : vector.hpp(5)
ConfigParser.hpp  (in_progress/ConfigParser.hpp)
 : ConfigLexer.hpp(1) vector.hpp(5)
ContiguousStream.hpp  (io/ContiguousStream.hpp)
 : vector.hpp(5)
DynamicString.hpp  (datastructs/DynamicString.hpp)
 : vector.hpp(5)
FunctionSet.hpp  (functional/FunctionSet.hpp)
 : vector.hpp(5)
IndexMap.hpp  (datastructs/IndexMap.hpp)
 : vector.hpp(5)
LinearCode.hpp  (hardware/LinearCode.hpp)
 : array.hpp(5) vector.hpp(5)
PayoffMatrix.hpp  (games/PayoffMatrix.hpp)
 : array.hpp(5)
Ptr.hpp  (base/Ptr.hpp)
 : assert.hpp(4) vector.hpp(5)
Range.hpp  (math/Range.hpp)
 : assert.hpp(4) vector.hpp(5)
SmallFifoMap.hpp  (datastructs/SmallFifoMap.hpp)
 : array.hpp(5)
UnorderedIndexMap.hpp  (datastructs/UnorderedIndexMap.hpp)
 : vector.hpp(5)
combos.hpp  (math/combos.hpp)
 : assert.hpp(4) vector.hpp(5)
map.hpp  (base/map.hpp)
 : MapProxy.hpp(5) assert.hpp(4)
serialize.hpp  (io/serialize.hpp)
 : serialize_macros.hpp(2) vector.hpp(5)
set_utils.hpp  (datastructs/set_utils.hpp)
 : vector.hpp(5)
unordered_map.hpp  (base/unordered_map.hpp)
 : MapProxy.hpp(5) assert.hpp(4)
valsort_map.hpp  (datastructs/valsort_map.hpp)
 : vector.hpp(5)
============ LEVEL 7 ============
MemoryImage.hpp  (in_progress/Empower/MemoryImage.hpp)
 : Ptr.hpp(6) assert.hpp(4) vector.hpp(5)
Random.hpp  (math/Random.hpp)
 : Ptr.hpp(6) Range.hpp(6) assert.hpp(4) bitset_utils.hpp(0)
Struct.hpp  (in_progress/Empower/Struct.hpp)
 : Ptr.hpp(6) assert.hpp(4) vector.hpp(5)
StructType.hpp  (in_progress/Empower/StructType.hpp)
 : Ptr.hpp(6) assert.hpp(4) vector.hpp(5)
SystematicsAnalysis.hpp  (Evolve/SystematicsAnalysis.hpp)
 : Ptr.hpp(6)
TypeManager.hpp  (in_progress/Empower/TypeManager.hpp)
 : Ptr.hpp(6) assert.hpp(4)
VarInfo.hpp  (in_progress/Empower/VarInfo.hpp)
 : Ptr.hpp(6) assert.hpp(4)
World_iterator.hpp  (Evolve/World_iterator.hpp)
 : Ptr.hpp(6)
hash_utils.hpp  (datastructs/hash_utils.hpp)
 : Ptr.hpp(6) span.hpp(0)
map_utils.hpp  (datastructs/map_utils.hpp)
 : map.hpp(6) vector.hpp(5)
ra_set.hpp  (datastructs/ra_set.hpp)
 : map.hpp(6) vector.hpp(5)
reference_vector.hpp  (datastructs/reference_vector.hpp)
 : Ptr.hpp(6) vector.hpp(5)
type_traits.hpp  (meta/type_traits.hpp)
 : Ptr.hpp(6) _is_streamable.hpp(0) meta.hpp(0)
============ LEVEL 8 ============
AnyFunction.hpp  (functional/AnyFunction.hpp)
 : Ptr.hpp(6) assert.hpp(4) type_traits.hpp(7)
Distribution.hpp  (math/Distribution.hpp)
 : Random.hpp(7) UnorderedIndexMap.hpp(6)
EventLib.hpp  (hardware/EventLib.hpp)
 : FunctionSet.hpp(6) map_utils.hpp(7) vector.hpp(5)
Signal.hpp  (control/Signal.hpp)
 : Action.hpp(0) FunctionSet.hpp(6) TypePack.hpp(1) map_utils.hpp(7)
StreamManager.hpp  (io/StreamManager.hpp)
 : Ptr.hpp(6) map_utils.hpp(7)
World_reflect.hpp  (Evolve/World_reflect.hpp)
 : Random.hpp(7) assert.hpp(4) reflection.hpp(2)
attrs.hpp  (tools/attrs.hpp)
 : TypePack.hpp(1) type_traits.hpp(7)
math.hpp  (math/math.hpp)
 : Random.hpp(7) assert.hpp(4) constants.hpp(0) reflection.hpp(2)
string_utils.hpp  (tools/string_utils.hpp)
 : Ptr.hpp(6) array.hpp(5) assert.hpp(4) reflection.hpp(2) type_traits.hpp(7) vector.hpp(5)
tuple_utils.hpp  (datastructs/tuple_utils.hpp)
 : ValPack.hpp(1) hash_utils.hpp(7)
============ LEVEL 9 ============
ActionManager.hpp  (control/ActionManager.hpp)
 : Action.hpp(0) string_utils.hpp(8)
Attributes.hpp  (web/Attributes.hpp)
 : errors.hpp(0) string_utils.hpp(8)
BitVector.hpp  (bits/BitVector.hpp)
 : Ptr.hpp(6) Random.hpp(7) _bitset_helpers.hpp(0) assert.hpp(4) bitset_utils.hpp(0) hash_utils.hpp(7) math.hpp(8) span.hpp(0) vector.hpp(5)
ConfigManager.hpp  (config/ConfigManager.hpp)
 : errors.hpp(0) string_utils.hpp(8)
DFA.hpp  (compiler/DFA.hpp)
 : array.hpp(5) string_utils.hpp(8) vector.hpp(5)
DataNode.hpp  (data/DataNode.hpp)
 : FunctionSet.hpp(6) IndexMap.hpp(6) ValPack.hpp(1) assert.hpp(4) math.hpp(8) string_utils.hpp(8) vector.hpp(5)
File.hpp  (io/File.hpp)
 : string_utils.hpp(8) vector.hpp(5)
InstLib.hpp  (hardware/InstLib.hpp)
 : Ptr.hpp(6) array.hpp(5) map_utils.hpp(7) string_utils.hpp(8) vector.hpp(5)
Listeners.hpp  (web/Listeners.hpp)
 : string_utils.hpp(8)
Mancala.hpp  (games/Mancala.hpp)
 : array.hpp(5) assert.hpp(4) math.hpp(8) vector.hpp(5)
Othello.hpp  (games/Othello.hpp)
 : array.hpp(5) assert.hpp(4) math.hpp(8) vector.hpp(5)
Othello8.hpp  (games/Othello8.hpp)
 : array.hpp(5) assert.hpp(4) bitset_utils.hpp(0) math.hpp(8) vector.hpp(5)
Point2D.hpp  (geometry/Point2D.hpp)
 : math.hpp(8)
SignalManager.hpp  (control/SignalManager.hpp)
 : Signal.hpp(8) string_utils.hpp(8)
SmallVector.hpp  (datastructs/SmallVector.hpp)
 : assert.hpp(4) math.hpp(8)
StringMap.hpp  (datastructs/StringMap.hpp)
 : string_utils.hpp(8) unordered_map.hpp(6)
Style.hpp  (web/Style.hpp)
 : string_utils.hpp(8)
TypeTracker.hpp  (tools/TypeTracker.hpp)
 : GenericFunction.hpp(5) Ptr.hpp(6) array.hpp(5) assert.hpp(4) map_utils.hpp(7) math.hpp(8) meta.hpp(0)
alert.hpp  (debug/alert.hpp)
 : string_utils.hpp(8)
ce_random.hpp  (in_progress/constexpr/ce_random.hpp)
 : math.hpp(8)
color_map.hpp  (web/color_map.hpp)
 : string_utils.hpp(8) vector.hpp(5)
command_line.hpp  (config/command_line.hpp)
 : string_utils.hpp(8) vector.hpp(5)
distances.hpp  (math/distances.hpp)
 : math.hpp(8) type_traits.hpp(7)
hash_namify.hpp  (tools/hash_namify.hpp)
 : string_utils.hpp(8) vector.hpp(5)
info_theory.hpp  (math/info_theory.hpp)
 : math.hpp(8) vector.hpp(5)
init.hpp  (web/init.hpp)
 : assert_warning.hpp(4) string_utils.hpp(8)
keyname_utils.hpp  (tools/keyname_utils.hpp)
 : assert.hpp(4) string_utils.hpp(8) vector.hpp(5)
memo_function.hpp  (functional/memo_function.hpp)
 : assert.hpp(4) meta.hpp(0) tuple_utils.hpp(8)
sequence_utils.hpp  (math/sequence_utils.hpp)
 : math.hpp(8) vector.hpp(5)
vector_utils.hpp  (datastructs/vector_utils.hpp)
 : string_utils.hpp(8) vector.hpp(5)
============ LEVEL 10 ============
Angle2D.hpp  (geometry/Angle2D.hpp)
 : Point2D.hpp(9) constants.hpp(0)
AvidaCPU_InstLib.hpp  (hardware/AvidaCPU_InstLib.hpp)
 : InstLib.hpp(9) math.hpp(8)
BitSorter.hpp  (hardware/BitSorter.hpp)
 : bitset_utils.hpp(0) vector.hpp(5) vector_utils.hpp(9)
Circle2D.hpp  (geometry/Circle2D.hpp)
 : Point2D.hpp(9)
DataFile.hpp  (data/DataFile.hpp)
 : DataNode.hpp(9) FunctionSet.hpp(6) NullStream.hpp(0) assert.hpp(4) string_utils.hpp(8) type_traits.hpp(7) vector.hpp(5)
DataInterface.hpp  (data/DataInterface.hpp)
 : DataNode.hpp(9)
DataManager.hpp  (data/DataManager.hpp)
 : DataNode.hpp(9) assert.hpp(4) map_utils.hpp(7)
Font.hpp  (web/Font.hpp)
 : Style.hpp(9) color_map.hpp(9)
Graph.hpp  (datastructs/Graph.hpp)
 : BitVector.hpp(9) assert.hpp(4) vector.hpp(5)
MatchDepository.hpp  (matching/MatchDepository.hpp)
 : SmallFifoMap.hpp(6) SmallVector.hpp(9) _DepositoryEntry.hpp(0)
NK.hpp  (Evolve/NK.hpp)
 : BitVector.hpp(9) Random.hpp(7) math.hpp(8) memo_function.hpp(9) vector.hpp(5)
RankedSelector.hpp  (matching/selectors_static/RankedSelector.hpp)
 : SmallVector.hpp(9) vector.hpp(5)
SettingCombos.hpp  (config/SettingCombos.hpp)
 : Ptr.hpp(6) map_utils.hpp(7) math.hpp(8) string_utils.hpp(8) vector.hpp(5) vector_utils.hpp(9)
SettingConfig.hpp  (config/SettingConfig.hpp)
 : Ptr.hpp(6) command_line.hpp(9) map_utils.hpp(7) math.hpp(8) string_utils.hpp(8) vector.hpp(5) vector_utils.hpp(9)
SignalControl.hpp  (control/SignalControl.hpp)
 : ActionManager.hpp(9) SignalManager.hpp(9)
SolveState.hpp  (tools/SolveState.hpp)
 : BitVector.hpp(9) assert.hpp(4)
StateGrid.hpp  (Evolve/StateGrid.hpp)
 : BitVector.hpp(9) File.hpp(9) Ptr.hpp(6) Random.hpp(7) assert.hpp(4) map_utils.hpp(7) math.hpp(8) vector.hpp(5)
TimeQueue.hpp  (datastructs/TimeQueue.hpp)
 : assert.hpp(4) vector.hpp(5) vector_utils.hpp(9)
TypeID.hpp  (meta/TypeID.hpp)
 : Ptr.hpp(6) TypePack.hpp(1) string_utils.hpp(8) type_traits.hpp(7) vector.hpp(5) vector_utils.hpp(9)
WidgetExtras.hpp  (web/WidgetExtras.hpp)
 : Attributes.hpp(9) Listeners.hpp(9) Style.hpp(9) init.hpp(9)
World_select.hpp  (Evolve/World_select.hpp)
 : IndexMap.hpp(6) Random.hpp(7) array.hpp(5) assert.hpp(4) macros.hpp(1) reflection.hpp(2) vector.hpp(5) vector_utils.hpp(9)
World_structure.hpp  (Evolve/World_structure.hpp)
 : Random.hpp(7) Trait.hpp(5) array.hpp(5) assert.hpp(4) math.hpp(8) vector.hpp(5) vector_utils.hpp(9)
ascii_utils.hpp  (io/ascii_utils.hpp)
 : assert.hpp(4) vector.hpp(5) vector_utils.hpp(9)
config.hpp  (config/config.hpp)
 : ConfigManager.hpp(9) errors.hpp(0) map_utils.hpp(7) string_utils.hpp(8) unordered_map.hpp(6) vector.hpp(5)
js_utils.hpp  (web/js_utils.hpp)
 : array.hpp(5) assert.hpp(4) init.hpp(9) map.hpp(6) vector.hpp(5)
mem_track.hpp  (debug/mem_track.hpp)
 : alert.hpp(9) map.hpp(6)
random_utils.hpp  (math/random_utils.hpp)
 : BitVector.hpp(9) Random.hpp(7) vector.hpp(5)
stats.hpp  (math/stats.hpp)
 : map.hpp(6) math.hpp(8) type_traits.hpp(7) vector.hpp(5) vector_utils.hpp(9)
unit_tests.hpp  (testing/unit_tests.hpp)
 : command_line.hpp(9) string_utils.hpp(8)
============ LEVEL 11 ============
ArgManager.hpp  (config/ArgManager.hpp)
 : Ptr.hpp(6) command_line.hpp(9) config.hpp(10) optional.hpp(5) vector.hpp(5)
AvidaGP.hpp  (hardware/AvidaGP.hpp)
 : AvidaCPU_InstLib.hpp(10) File.hpp(9) Ptr.hpp(6) Random.hpp(7) array.hpp(5) map_utils.hpp(7) string_utils.hpp(8) vector.hpp(5)
BitArray.hpp  (bits/BitArray.hpp)
 : Ptr.hpp(6) Random.hpp(7) _bitset_helpers.hpp(0) assert.hpp(4) bitset_utils.hpp(0) hash_utils.hpp(7) math.hpp(8) random_utils.hpp(10) span.hpp(0) type_traits.hpp(7) vector.hpp(5)
Body2D.hpp  (geometry/Body2D.hpp)
 : Angle2D.hpp(10) Circle2D.hpp(10) Ptr.hpp(6) alert.hpp(9) assert.hpp(4) mem_track.hpp(10) vector.hpp(5)
DataLayout.hpp  (data/DataLayout.hpp)
 : MemoryImage.hpp(7) TypeID.hpp(10) assert.hpp(4) map_utils.hpp(7) vector.hpp(5)
DataLog.hpp  (data/DataLog.hpp)
 : ascii_utils.hpp(10) assert.hpp(4) stats.hpp(10) vector.hpp(5) vector_utils.hpp(9)
Empower.hpp  (in_progress/Empower/Empower.hpp)
 : Ptr.hpp(6) TypeID.hpp(10) vector.hpp(5)
JSWrap.hpp  (web/JSWrap.hpp)
 : assert.hpp(4) init.hpp(9) js_utils.hpp(10) mem_track.hpp(10) meta.hpp(0) tuple_struct.hpp(2) tuple_utils.hpp(8) vector.hpp(5)
Surface.hpp  (geometry/Surface.hpp)
 : Angle2D.hpp(10) Point2D.hpp(9) Ptr.hpp(6) TypePack.hpp(1) TypeTracker.hpp(9) vector_utils.hpp(9)
Systematics.hpp  (Evolve/Systematics.hpp)
 : DataFile.hpp(10) DataManager.hpp(10) DataNode.hpp(9) Ptr.hpp(6) Signal.hpp(8) SystematicsAnalysis.hpp(7) World_structure.hpp(10) info_theory.hpp(9) map_utils.hpp(7) set_utils.hpp(6) stats.hpp(10) string_utils.hpp(8)
Type.hpp  (in_progress/Empower/Type.hpp)
 : TypeID.hpp(10) assert.hpp(4)
TypeMap.hpp  (datastructs/TypeMap.hpp)
 : TypeID.hpp(10)
Var.hpp  (in_progress/Empower2/Var.hpp)
 : Ptr.hpp(6) TypeID.hpp(10) assert.hpp(4)
VarMap.hpp  (data/VarMap.hpp)
 : Ptr.hpp(6) TypeID.hpp(10) assert.hpp(4) map_utils.hpp(7) string_utils.hpp(8) unordered_map.hpp(6) vector.hpp(5)
World_output.hpp  (Evolve/World_output.hpp)
 : DataFile.hpp(10) SystematicsAnalysis.hpp(7) string_utils.hpp(8) vector.hpp(5)
config_utils.hpp  (config/config_utils.hpp)
 : config.hpp(10)
graph_utils.hpp  (datastructs/graph_utils.hpp)
 : Graph.hpp(10) Random.hpp(7) assert.hpp(4) random_utils.hpp(10) vector.hpp(5) vector_utils.hpp(9)
============ LEVEL 12 ============
BitSet.hpp  (bits/BitSet.hpp)
 : BitArray.hpp(11)
DataMap.hpp  (data/DataMap.hpp)
 : DataLayout.hpp(11) MemoryImage.hpp(7) Ptr.hpp(6) TypeID.hpp(10) assert.hpp(4) string_utils.hpp(8)
OEE.hpp  (Evolve/OEE.hpp)
 : BloomFilter.hpp(0) Ptr.hpp(6) Systematics.hpp(11) set_utils.hpp(6) vector.hpp(5) vector_utils.hpp(9)
Surface2D.hpp  (geometry/Surface2D.hpp)
 : Body2D.hpp(11) Ptr.hpp(6)
UrlParams.hpp  (web/UrlParams.hpp)
 : JSWrap.hpp(11) js_utils.hpp(10)
emfunctions.hpp  (web/emfunctions.hpp)
 : JSWrap.hpp(11) alert.hpp(9) string_utils.hpp(8)
events.hpp  (web/events.hpp)
 : JSWrap.hpp(11)
utils.hpp  (web/d3/utils.hpp)
 : JSWrap.hpp(11) init.hpp(9) js_utils.hpp(10) macros.hpp(1)
============ LEVEL 13 ============
BitMatrix.hpp  (bits/BitMatrix.hpp)
 : BitSet.hpp(12) bitset_utils.hpp(0)
KeypressManager.hpp  (web/KeypressManager.hpp)
 : JSWrap.hpp(11) errors.hpp(0) events.hpp(12)
NFA.hpp  (compiler/NFA.hpp)
 : BitSet.hpp(12) set_utils.hpp(6) vector.hpp(5)
NK-const.hpp  (Evolve/NK-const.hpp)
 : BitSet.hpp(12) Random.hpp(7) assert.hpp(4) math.hpp(8)
Physics2D.hpp  (geometry/Physics2D.hpp)
 : Ptr.hpp(6) Surface2D.hpp(12) vector.hpp(5)
RawImage.hpp  (web/RawImage.hpp)
 : JSWrap.hpp(11) Ptr.hpp(6) Signal.hpp(8) emfunctions.hpp(12) map_utils.hpp(7) vector.hpp(5)
Widget.hpp  (web/Widget.hpp)
 : Font.hpp(10) Signal.hpp(8) WidgetExtras.hpp(10) errors.hpp(0) events.hpp(12) init.hpp(9) mem_track.hpp(10) vector.hpp(5)
World.hpp  (Evolve/World.hpp)
 : BitSet.hpp(12) DataFile.hpp(10) DataManager.hpp(10) Ptr.hpp(6) Random.hpp(7) Range.hpp(6) Signal.hpp(8) SignalControl.hpp(10) Systematics.hpp(11) Trait.hpp(5) World_iterator.hpp(7) World_reflect.hpp(8) World_select.hpp(10) World_structure.hpp(10) map_utils.hpp(7) random_utils.hpp(10) reflection.hpp(2) string_utils.hpp(8) vector.hpp(5)
d3_init.hpp  (web/d3/d3_init.hpp)
 : JSWrap.hpp(11) errors.hpp(0) init.hpp(9) utils.hpp(12)
matchbin_metrics.hpp  (matching/matchbin_metrics.hpp)
 : BitSet.hpp(12) Distribution.hpp(8) IndexMap.hpp(6) array.hpp(5) assert.hpp(4) hash_utils.hpp(7) math.hpp(8) span.hpp(0) string_utils.hpp(8) tuple_utils.hpp(8) vector.hpp(5)
matchbin_regulators.hpp  (matching/matchbin_regulators.hpp)
 : BitSet.hpp(12) Distribution.hpp(8) IndexMap.hpp(6) array.hpp(5) assert.hpp(4) hash_utils.hpp(7) math.hpp(8) string_utils.hpp(8) vector.hpp(5)
matchbin_selectors.hpp  (matching/matchbin_selectors.hpp)
 : BitSet.hpp(12) Distribution.hpp(8) IndexMap.hpp(6) array.hpp(5) assert.hpp(4) hash_utils.hpp(7) math.hpp(8) optional.hpp(5) string_utils.hpp(8) vector.hpp(5)
============ LEVEL 14 ============
Button.hpp  (web/Button.hpp)
 : Widget.hpp(13) init.hpp(9)
CanvasAction.hpp  (web/CanvasAction.hpp)
 : Point2D.hpp(9) RawImage.hpp(13) Widget.hpp(13)
FileInput.hpp  (web/FileInput.hpp)
 : File.hpp(9) Widget.hpp(13)
Image.hpp  (web/Image.hpp)
 : Widget.hpp(13)
Input.hpp  (web/Input.hpp)
 : Widget.hpp(13)
Resource.hpp  (Evolve/Resource.hpp)
 : World.hpp(13)
Selector.hpp  (web/Selector.hpp)
 : JSWrap.hpp(11) Widget.hpp(13) vector.hpp(5)
Text.hpp  (web/Text.hpp)
 : DynamicString.hpp(6) Widget.hpp(13)
TextArea.hpp  (web/TextArea.hpp)
 : Widget.hpp(13)
TextFeed.hpp  (web/TextFeed.hpp)
 : Widget.hpp(13)
Tween.hpp  (web/Tween.hpp)
 : Widget.hpp(13) emfunctions.hpp(12)
_FacetedWidget.hpp  (web/_FacetedWidget.hpp)
 : Widget.hpp(13)
commands.hpp  (web/commands.hpp)
 : Widget.hpp(13)
dataset.hpp  (web/d3/dataset.hpp)
 : JSWrap.hpp(11) d3_init.hpp(13) js_utils.hpp(10) string_utils.hpp(8)
lexer_utils.hpp  (compiler/lexer_utils.hpp)
 : BitVector.hpp(9) DFA.hpp(9) NFA.hpp(13) vector.hpp(5)
matchbin_utils.hpp  (matching/matchbin_utils.hpp)
 : matchbin_metrics.hpp(13) matchbin_regulators.hpp(13) matchbin_selectors.hpp(13)
scales.hpp  (web/d3/scales.hpp)
 : d3_init.hpp(13) js_utils.hpp(10) utils.hpp(12)
spatial_stats.hpp  (math/spatial_stats.hpp)
 : World.hpp(13) stats.hpp(10) vector.hpp(5)
============ LEVEL 15 ============
Animate.hpp  (web/Animate.hpp)
 : Button.hpp(14) JSWrap.hpp(11) Widget.hpp(13) assert.hpp(4) emfunctions.hpp(12) vector.hpp(5)
CanvasShape.hpp  (web/CanvasShape.hpp)
 : CanvasAction.hpp(14) Circle2D.hpp(10) vector.hpp(5)
MatchBin.hpp  (matching/MatchBin.hpp)
 : BitSet.hpp(12) DataFile.hpp(10) DataNode.hpp(9) IndexMap.hpp(6) assert.hpp(4) errors.hpp(0) matchbin_utils.hpp(14) optional.hpp(5) vector.hpp(5)
RegEx.hpp  (compiler/RegEx.hpp)
 : BitSet.hpp(12) NFA.hpp(13) Ptr.hpp(6) lexer_utils.hpp(14) string_utils.hpp(8) vector.hpp(5)
histogram.hpp  (web/d3/histogram.hpp)
 : d3_init.hpp(13) dataset.hpp(14) js_utils.hpp(10) tuple_struct.hpp(2) vector.hpp(5)
selection.hpp  (web/d3/selection.hpp)
 : JSWrap.hpp(11) assert.hpp(4) d3_init.hpp(13) dataset.hpp(14) js_utils.hpp(10) utils.hpp(12)
============ LEVEL 16 ============
Canvas.hpp  (web/Canvas.hpp)
 : CanvasAction.hpp(14) CanvasShape.hpp(15) Circle2D.hpp(10) string_utils.hpp(8) vector.hpp(5)
Div.hpp  (web/Div.hpp)
 : Animate.hpp(15) Text.hpp(14) Widget.hpp(13) init.hpp(9)
DocuExtras.hpp  (web/DocuExtras.hpp)
 : Animate.hpp(15) Text.hpp(14) Widget.hpp(13) init.hpp(9)
EventDrivenGP.hpp  (hardware/EventDrivenGP.hpp)
 : BitSet.hpp(12) BitVector.hpp(9) EventLib.hpp(8) InstLib.hpp(9) MatchBin.hpp(15) Ptr.hpp(6) Random.hpp(7) Signal.hpp(8) SignalControl.hpp(10) array.hpp(5) map_utils.hpp(7) string_utils.hpp(8) vector.hpp(5)
Lexer.hpp  (compiler/Lexer.hpp)
 : RegEx.hpp(15) lexer_utils.hpp(14) map.hpp(6) map_utils.hpp(7) vector.hpp(5)
axis.hpp  (web/d3/axis.hpp)
 : d3_init.hpp(13) js_utils.hpp(10) scales.hpp(14) selection.hpp(15) string_utils.hpp(8)
svg_shapes.hpp  (web/d3/svg_shapes.hpp)
 : d3_init.hpp(13) dataset.hpp(14) js_utils.hpp(10) scales.hpp(14) selection.hpp(15)
visual_elements.hpp  (web/d3/visual_elements.hpp)
 : JSWrap.hpp(11) selection.hpp(15) vector.hpp(5)
============ LEVEL 17 ============
Author.hpp  (scholar/Author.hpp)
 : Lexer.hpp(16)
Collapse.hpp  (prefab/Collapse.hpp)
 : Div.hpp(16) Widget.hpp(13) _FacetedWidget.hpp(14) string_utils.hpp(8)
CommentBox.hpp  (prefab/CommentBox.hpp)
 : Div.hpp(16) string_utils.hpp(8)
Element.hpp  (web/Element.hpp)
 : Animate.hpp(15) Div.hpp(16) Text.hpp(14) Widget.hpp(13) init.hpp(9)
Parser.hpp  (in_progress/Parser.hpp)
 : BitVector.hpp(9) Lexer.hpp(16) vector.hpp(5)
Table.hpp  (web/Table.hpp)
 : Div.hpp(16) Widget.hpp(13) WidgetExtras.hpp(10) _TableCell.hpp(0) _TableCol.hpp(0) _TableColGroup.hpp(0) _TableRow.hpp(0) _TableRowGroup.hpp(0) vector.hpp(5)
canvas_utils.hpp  (web/canvas_utils.hpp)
 : BitMatrix.hpp(13) Canvas.hpp(16) Circle2D.hpp(10) StateGrid.hpp(10) Surface.hpp(11) Surface2D.hpp(12) color_map.hpp(9) vector.hpp(5)
layout.hpp  (web/d3/layout.hpp)
 : JSWrap.hpp(11) d3_init.hpp(13) dataset.hpp(14) selection.hpp(15) svg_shapes.hpp(16) tuple_struct.hpp(2)
signalgp_utils.hpp  (hardware/signalgp_utils.hpp)
 : BitSet.hpp(12) EventDrivenGP.hpp(16) Random.hpp(7) errors.hpp(0) map_utils.hpp(7) math.hpp(8) random_utils.hpp(10)
============ LEVEL 18 ============
Citation.hpp  (scholar/Citation.hpp)
 : Author.hpp(17) map.hpp(6) map_utils.hpp(7) string_utils.hpp(8) vector.hpp(5)
CodeBlock.hpp  (prefab/CodeBlock.hpp)
 : Element.hpp(17) Widget.hpp(13) errors.hpp(0) string_utils.hpp(8)
Document.hpp  (web/Document.hpp)
 : Button.hpp(14) Canvas.hpp(16) Div.hpp(16) Element.hpp(17) FileInput.hpp(14) Image.hpp(14) Input.hpp(14) Selector.hpp(14) Table.hpp(17) Text.hpp(14) TextArea.hpp(14) canvas_utils.hpp(17) color_map.hpp(9) events.hpp(12)
FontAwesomeIcon.hpp  (prefab/FontAwesomeIcon.hpp)
 : Div.hpp(16) Element.hpp(17) Widget.hpp(13) string_utils.hpp(8)
LoadingIcon.hpp  (prefab/LoadingIcon.hpp)
 : Div.hpp(16) Element.hpp(17) Widget.hpp(13) errors.hpp(0) string_utils.hpp(8)
LoadingModal.hpp  (prefab/LoadingModal.hpp)
 : Div.hpp(16) Element.hpp(17) Widget.hpp(13) string_utils.hpp(8)
Modal.hpp  (prefab/Modal.hpp)
 : Button.hpp(14) Div.hpp(16) Element.hpp(17) Widget.hpp(13) string_utils.hpp(8)
ToggleSwitch.hpp  (prefab/ToggleSwitch.hpp)
 : Element.hpp(17) Input.hpp(14) Widget.hpp(13) string_utils.hpp(8)
config_web_interface.hpp  (config/config_web_interface.hpp)
 : Div.hpp(16) Element.hpp(17) Input.hpp(14) config.hpp(10) set_utils.hpp(6) string_utils.hpp(8)
visualizations.hpp  (web/d3/visualizations.hpp)
 : Animate.hpp(15) BitSet.hpp(12) FunctionSet.hpp(6) JSWrap.hpp(11) Random.hpp(7) axis.hpp(16) config.hpp(10) constants.hpp(0) histogram.hpp(15) init.hpp(9) layout.hpp(17) scales.hpp(14) selection.hpp(15) stats.hpp(10) string_utils.hpp(8) svg_shapes.hpp(16) visual_elements.hpp(16)
============ LEVEL 19 ============
Bibliography.hpp  (scholar/Bibliography.hpp)
 : Citation.hpp(18) vector.hpp(5)
Card.hpp  (prefab/Card.hpp)
 : Collapse.hpp(17) Div.hpp(16) FontAwesomeIcon.hpp(18) string_utils.hpp(8)
NodeDomShim.hpp  (web/NodeDomShim.hpp)
 : Document.hpp(18) string_utils.hpp(8) vector.hpp(5)
_MochaTestRunner.hpp  (web/_MochaTestRunner.hpp)
 : Document.hpp(18) JSWrap.hpp(11) Signal.hpp(8) unit_tests.hpp(10) vector.hpp(5)
web.hpp  (web/web.hpp)
 : Document.hpp(18)
============ LEVEL 20 ============
ConfigPanel.hpp  (prefab/ConfigPanel.hpp)
 : Card.hpp(19) Collapse.hpp(17) CommentBox.hpp(17) Div.hpp(16) Element.hpp(17) FontAwesomeIcon.hpp(18) Input.hpp(14) ToggleSwitch.hpp(18) config.hpp(10) set_utils.hpp(6) string_utils.hpp(8)
